@startuml
skinparam handwritten true
skinparam monochrome true
skinparam packageStyle rect
skinparam defaultFontName FG Virgil
skinparam shadowing false

actor MenuManager as Actor
participant RegisterDishUI as UI <<presentation>>
participant RegisterDishController as Controller <<application>>
participant "dish:Dish" as Domain <<domain>>
database DishRepository as Repository <<repository>>

Actor --> UI: Register Dish
activate UI
    UI -> Controller: create
    UI --> Actor: Ask dish information
    Actor --> UI: Name, Price, Short and Long Description, Calories and Salt
    UI --> Actor: Show List of Dish Types
    Actor --> UI: Dish Type

    UI -> Controller: registerDish(name, type, price,\nshortDescription, longDescription, calories, salt)
    activate Controller

        note right of Controller : hidden authorization user guarantee \n(see specific diagram)

            Controller -> Domain : create(name, type, price, shortDescription,\nlongDescription, calories, salt)

            note right of Controller : Simplified persistence\n(see specific diagram)

            Controller -> Repository: save(dish)
            activate Repository

            Repository --> Controller: dish
            deactivate Repository

        Controller->UI: dish
    deactivate Controller

        UI-->Actor: Display Dish Info or error
deactivate UI
@enduml
