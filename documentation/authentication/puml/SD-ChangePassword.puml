@startuml
skinparam handwritten true
skinparam monochrome true
skinparam packageStyle rect
skinparam defaultFontName FG Virgil
skinparam shadowing false

actor "User" as USER
participant ChangePasswordUI as UI <<presentation>>
participant AuthzRegistry as Registry <<utility>>
participant AuthenticationService as AuthService <<application>>
participant AuthorizationService as AuthzService <<application>>
participant UserRepository as Repo <<repository>>
participant "userSession:UserSession" as Session <<domain>>
participant "user:SystemUser" as User <<domain>>
participant Password as Pwd <<domain>>

USER -> UI : Request change password
activate UI

UI --> USER : Asks old and new password
deactivate UI

USER -> UI : Provide old and new password
activate UI

UI -> Registry : authenticationService()
activate Registry
Registry --> UI : AuthService
deactivate Registry

UI -> AuthService : changePassword(oldPwd, newPwd)
activate AuthService

note right of AuthService : simplified framework implementation

AuthService -> AuthzService : session()
activate AuthzService
AuthzService --> AuthService : userSession
deactivate AuthzService

AuthService -> Session : authenticatedUser()
activate Session
Session --> AuthService : user
deactivate Session

AuthService -> User : passwordMatches(oldPwd, encoder)
activate User
User --> AuthService : true or false
deactivate User

AuthService -> Pwd : encodedAndValid(newPwd,policy,encoder)
activate Pwd
Pwd --> AuthService : newPwd
deactivate Pwd

AuthService -> User : changePassword(newPwd)
activate User
User --> AuthService
deactivate User

AuthService -> Repo : save(user)

AuthService --> UI : true or false
deactivate AuthService

UI --> USER : Show success or failure
deactivate UI

@enduml
